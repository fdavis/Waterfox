# One config to rule them all

# macOS Specific Options
if test `uname -s` = Darwin; then
ac_add_options --enable-optimize="-O2 -march=core2 -mtune=core2 -w"
ac_add_options --enable-macos-target=10.9
ac_add_options --with-macos-sdk=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk
mk_add_options AUTOCONF=/usr/local/Cellar/autoconf213/2.13/bin/autoconf213
# Windows 10 Specific Options
ac_add_options --disable-xcode-checks
elif test `uname -s` = MINGW32_NT-6.2; then
ac_add_options --disable-maintenance-service
ac_add_options --enable-optimize="-O2 -Qvec -w -clang:-arch:SSE3"
ac_add_options --target=x86_64-pc-mingw32
ac_add_options --with-libclang-path="C:\Program Files\LLVM\bin"
ac_add_options --with-clang-path="C:\Program Files\LLVM\bin\clang.exe"
export WIN32_REDIST_DIR="/c/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Redist/MSVC/14.16.27012/x64/Microsoft.VC141.CRT"
export WIN_UCRT_REDIST_DIR="/c/Program Files (x86)/Windows Kits/10/Redist/ucrt/DLLs/x64"
# Linux Specific Options
elif test `uname -s` = Linux; then
#x86 Specific Options
if test `uname -m` = x86_64; then
export CC=clang
export CXX=clang++
ac_add_options --enable-optimize="-O2 -march=nocona -mtune=nocona -w"
ac_add_options --target=x86_64-pc-linux-gnu
#ppc64le specific options
elif test `uname -m` = ppc64le; then
export CC=gcc
export CXX=g++
ac_add_options --enable-optimize="-O2 -mcpu=power9"
ac_add_options --target=powerpc64le-unknown-linux-gnu
fi
ac_add_options --enable-pulseaudio
ac_add_options --enable-alsa
fi

if test `uname -s` = MINGW32_NT-6.2; then
mk_add_options MOZ_MAKE_FLAGS=-j8
else
X=$(($(getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN)*3/2))
mk_add_options MOZ_MAKE_FLAGS=-j${X%.*}
fi
mk_add_options AUTOCLOBBER=1
mk_add_options MOZ_OBJDIR=objdir-current
export MOZ_REQUIRE_SIGNING=0
export MOZ_INCLUDE_SOURCE_INFO=1

ac_add_options --disable-debug
ac_add_options --disable-dmd
ac_add_options --disable-crashreporter
ac_add_options --disable-profiling
ac_add_options --disable-signmar
ac_add_options --disable-tests
ac_add_options --disable-verify-mar

ac_add_options --enable-application=browser
#Crashes PPC64LE builds
if test `uname -m` != ppc64le; then
ac_add_options --enable-ccache=ccache
elif test `uname -m` = ppc64le; then
ac_add_options --enable-ccache=ccache
fi
#ac_add_options --enable-lto
# Stick to the same channel as Dev Edition would be
ac_add_options --enable-update-channel=aurora
ac_add_options --enable-rust-simd
ac_add_options --enable-updater
ac_add_options "MOZ_ALLOW_LEGACY_EXTENSIONS=1"

ac_add_options --with-app-name=waterfox
ac_add_options --with-app-basename=Waterfox
ac_add_options --with-branding=browser/branding/waterfox
ac_add_options --with-distribution-id=net.waterfox
